!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;t="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,t.foo=e()}}(function(){return function e(t,i,o){function n(r,s){if(!i[r]){if(!t[r]){var h="function"==typeof require&&require;if(!s&&h)return h(r,!0);if(a)return a(r,!0);var d=new Error("Cannot find module '"+r+"'");throw d.code="MODULE_NOT_FOUND",d}var u=i[r]={exports:{}};t[r][0].call(u.exports,function(e){var i=t[r][1][e];return n(i?i:e)},u,u.exports,e,t,i,o)}return i[r].exports}for(var a="function"==typeof require&&require,r=0;r<o.length;r++)n(o[r]);return n}({1:[function(e,t,i){var o="ontouchstart"in window||navigator.msMaxTouchPoints>0,n={mobile:{react:{down:"onTouchStart",drag:"onTouchMove",drop:"onTouchEnd",move:"onTouchMove",up:"onTouchUp"},"native":{down:"touchstart",drag:"touchmove",drop:"touchend",move:"touchmove",up:"touchup"}},desktop:{react:{down:"onMouseDown",drag:"onDragOver",drop:"onDrop",move:"onMouseMove",up:"onMouseUp"},"native":{down:"mousedown",drag:"dragStart",drop:"drop",move:"mousemove",up:"mouseup"}}},a=o?n.mobile:n.desktop,r=React.createClass({displayName:"ReactAvatarEditor",propTypes:{scale:React.PropTypes.number,image:React.PropTypes.string,border:React.PropTypes.number,width:React.PropTypes.number,height:React.PropTypes.number,color:React.PropTypes.arrayOf(React.PropTypes.number),onImageReady:React.PropTypes.func,style:React.PropTypes.object},getDefaultProps:function(){return{scale:1,border:25,width:200,height:200,color:[0,0,0,.5],onImageReady:function(){},style:{}}},getInitialState:function(){return{drag:!1,my:null,mx:null,image:{x:0,y:0}}},getDimensions:function(){return{width:this.props.width,height:this.props.height,border:this.props.border,canvas:{width:this.props.width+2*this.props.border,height:this.props.height+2*this.props.border}}},getImage:function(e,t){var i=document.createElement("canvas"),o=i.getContext("2d"),n=this.getDimensions();i.width=n.width,i.height=n.height,o.globalCompositeOperation="destination-over";var a=this.state.image;return this.paintImage(o,{resource:a.resource,x:a.x-n.border,y:a.y-n.border,width:a.width,height:a.height}),i.toDataURL(e,t)},isDataURL:function(e){var t=/^\s*data:([a-z]+\/[a-z]+(;[a-z\-]+\=[a-z\-]+)?)?(;base64)?,[a-z0-9\!\$\&\'\,\(\)\*\+\,\;\=\-\.\_\~\:\@\/\?\%\s]*\s*$/i;return!!e.match(t)},loadImage:function(e){var t=new Image;t.onload=this.handleImageReady.bind(this,t),this.isDataURL(e)||(t.crossOrigin="anonymous"),t.src=e},componentDidMount:function(){var e=this.getDOMNode().getContext("2d");this.props.image&&this.loadImage(this.props.image),this.paint(e),document&&document.addEventListener(a["native"].move,this.handleMouseMove,!1),document&&document.addEventListener(a["native"].up,this.handleMouseUp,!1),o&&React.initializeTouchEvents(!0)},componentWillUnmount:function(){document&&document.removeEventListener(a["native"].move,this.handleMouseMove,!1),document&&document.removeEventListener(a["native"].up,this.handleMouseUp,!1)},componentDidUpdate:function(){var e=this.getDOMNode().getContext("2d");e.clearRect(0,0,this.getDimensions().canvas.width,this.getDimensions().canvas.height),this.paint(e),this.paintImage(e,this.state.image)},handleImageReady:function(e){var t=this.getInitialSize(e.width,e.height);t.resource=e,t.x=this.props.border,t.y=this.props.border,this.setState({drag:!1,image:t},this.props.onImageReady)},getInitialSize:function(e,t){var i,o,n,a,r;return n=this.getDimensions(),a=n.height/n.width,r=t/e,a>r?(i=this.getDimensions().height,o=e*(i/t)):(o=this.getDimensions().width,i=t*(o/e)),{height:i,width:o}},componentWillReceiveProps:function(e){this.props.image!=e.image&&this.loadImage(e.image),this.props.scale!=e.scale&&this.squeeze(e)},paintImage:function(e,t){if(t.resource){var i=this.calculatePosition(t);e.save(),e.globalCompositeOperation="destination-over",e.drawImage(t.resource,t.x,t.y,i.width,i.height),e.restore()}},calculatePosition:function(e){e=e||this.state.image;var t,i,o,n,a=this.getDimensions();o=e.width*this.props.scale,n=e.height*this.props.scale;var r=(o-e.width)/2,s=(n-e.height)/2;t=e.x-r,i=e.y-s,t=Math.min(t,a.border),i=Math.min(i,a.border);var h=n+(i-a.border);i=h>a.height?i:i+(a.height-h);var d=o+(t-a.border);return t=d>a.width?t:t+(a.width-d),{x:t,y:i,height:n,width:o}},paint:function(e){e.save(),e.translate(0,0),e.fillStyle="rgba("+this.props.color.slice(0,4).join(",")+")";var t=this.getDimensions(),i=t.border,o=t.canvas.height,n=t.canvas.width;e.fillRect(0,0,n,i),e.fillRect(0,o-i,n,i),e.fillRect(0,i,i,o-2*i),e.fillRect(n-i,i,i,o-2*i),e.restore()},handleMouseDown:function(){this.setState({drag:!0,mx:null,my:null})},handleMouseUp:function(){this.state.drag&&this.setState({drag:!1})},handleMouseMove:function(e){if(0!=this.state.drag){var t=this.state.image,i=t.x,n=t.y,a=o?event.targetTouches[0].pageX:e.clientX,r=o?event.targetTouches[0].pageY:e.clientY,s={mx:a,my:r,image:t};if(this.state.mx&&this.state.my){var h=this.state.mx-a,d=this.state.my-r;t.y=this.getBoundedY(n-d,this.props.scale),t.x=this.getBoundedX(i-h,this.props.scale)}this.setState(s)}},squeeze:function(e){var t=this.state.image;t.y=this.getBoundedY(t.y,e.scale),t.x=this.getBoundedX(t.x,e.scale),this.setState({image:t})},getBoundedX:function(e,t){var i,o=this.state.image,n=this.getDimensions(),a=Math.ceil((o.width*t-o.width)/2),r=Math.ceil(-o.width*t+n.width+n.border),s=n.border;return e-a>=n.border&&(i=n.border+a),r>e&&(i=r),e>s&&(i=s),i||e},getBoundedY:function(e,t){var i,o=this.state.image,n=this.getDimensions(),a=Math.ceil((o.height*t-o.height)/2),r=Math.ceil(-o.height*t+n.height+n.border),s=n.border;return e-a>=n.border&&(i=n.border+a),r>e&&(i=r),e>s&&(i=s),i||e},handleDragOver:function(e){e.preventDefault()},handleDrop:function(e){e.stopPropagation(),e.preventDefault();var t=new FileReader;t.onload=this.handleUploadReady,t.readAsDataURL(e.dataTransfer.files[0])},handleUploadReady:function(e){this.loadImage(e.target.result)},render:function(){var e={width:this.getDimensions().canvas.width,height:this.getDimensions().canvas.height,style:this.props.style};return e[a.react.down]=this.handleMouseDown,e[a.react.drag]=this.handleDragOver,e[a.react.drop]=this.handleDrop,React.createElement("canvas",React.__spread({},e))}});t.exports=r},{}]},{},[1])(1)});